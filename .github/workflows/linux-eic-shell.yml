name: linux-eic-shell

on: [push, pull_request]

jobs:
  xmllint:
    runs-on: ubuntu-latest
    stpes:
    - uses: actions/checkout@v2
    - run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils
        xmllint *.xml ip6/*.xml > /dev/null

  build-test:
    runs-on: ubuntu-latest
    needs: xmllint
    steps:
    - uses: actions/checkout@v2
    - run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils
        xmllint *.xml ip6/*.xml > /dev/null

  build-test:
    runs-on: ubuntu-latest
    needs: xmllint
    steps:
    - uses: actions/checkout@v2
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "jug_xl:nightly"
        run: |
          PREFIX=install
          cmake -B build -S . -DCMAKE_INSTALL_PREFIX=${PREFIX}
          cmake --build build -- install
    - uses: actions/upload-artifact@v3
      with:
        name: install
        path: install/
        if-no-files-found: error

  convert-to-gdml:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: install
        path: install/
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "jug_xl:nightly"
        setup: install/setup.sh
        run: |
          mkdir -p geo
          python scripts/convert_to_gdml.py --compact ${BEAMLINE_PATH}/${BEAMLINE}.xml --output geo/${BEAMLINE}.gdml
    - uses: actions/upload-artifact@v3
      with:
        name: ip6.gdml
        path: geo/
        if-no-files-found: error

  convert-to-tgeo:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: install
        path: install/
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "jug_xl:nightly"
        setup: install/setup.sh
        run: |
          mkdir -p geo
          dd_web_display --output geo/${BEAMLINE}.root ${BEAMLINE_PATH}/${BEAMLINE}.xml
    - uses: actions/upload-artifact@v3
      with:
        name: ip6.root
        path: geo/
        if-no-files-found: error

  dump-constants:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: install
        path: install/
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "jug_xl:nightly"
        setup: install/setup.sh
        run: |
          mkdir -p doc
          npdet_info dump ${BEAMLINE_PATH}/${BEAMLINE}.xml | tee doc/constants.out
    - uses: actions/upload-artifact@v3
      with:
        name: constants.out
        path: doc/constants.out
        if-no-files-found: error

  check-overlap-tgeo:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: install
        path: install/
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "jug_xl:nightly"
        setup: install/setup.sh
        run: |
          mkdir -p doc
          checkOverlaps -c ${BEAMLINE_PATH}/${BEAMLINE_CONFIG}.xml | tee doc/overlap_check_tgeo.out
          noverlaps="$(grep -c ovlp doc/overlap_check_tgeo.out || true)"
          if [[ "${noverlaps}" -gt "0" ]] ; then echo "${noverlaps} overlaps found!" && false ; fi

  check-overlap-geant4:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: install
        path: install/
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "jug_xl:nightly"
        setup: install/setup.sh
        run: |
          mkdir -p doc
          python scripts/checkOverlaps.py -c ${BEAMLINE_PATH}/${BEAMLINE_CONFIG}.xml | tee doc/overlap_check_geant4.out
          noverlaps="$(grep -c GeomVol1002 doc/overlap_check_geant4.out || true)"
          if [[ "${noverlaps}" -gt "0" ]] ; then echo "${noverlaps} overlaps found!" && false ; fi

  generate-prim-file:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: install
        path: install/
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "jug_xl:nightly"
        setup: install/setup.sh
        run: |
          bin/generate_prim_file -o prim -D -t detector_view -c ip6.xml
    - uses: actions/upload-artifact@v3
      with:
        name: detector_view.prim
        path: prim/detector_view.prim
        if-no-files-found: error
        retention-days: 1

  dawn-view:
    runs-on: ubuntu-latest
    needs: generate-prim-file
    strategy:
      matrix:
        view: [view50]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: detector_view.prim
        path: prim/
    - uses: cvmfs-contrib/github-action-cvmfs@v2
    - uses: eic/run-cvmfs-osg-eic-shell@main
      with:
        platform-release: "jug_xl:nightly"
        run: |
          mkdir -p images
          bin/make_dawn_views -i prim/detector_view.prim -t ${{ matrix.view }} -d views/${{ matrix.view }} -D
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.view }}
        path: images/
        if-no-files-found: error
